# completa

[5	2	1	0	0]		[5]		[25 + 10 + 5]				[40]
[2	5	2	1	0]		[5]		[10 + 25 + 10 + 5]			[50]
[1	2	5	2	1]	x	[5]	=	[5 + 10 + 25 + 10 + 5]	=	[55]
[0	1	2	5	2]		[5]		[5 + 10 + 25 + 10]			[50]
[0	0	1	2	5]		[5]		[5 + 10 + 25]				[40]

# sparsa

[5	0	0	0	0]		[5]		[25]				[25]
[2	5	0	0	0]		[5]		[10 + 25]			[35]
[1	2	5	0	0]	x	[5]	=	[5 + 10 + 25]	=	[40]
[0	1	2	5	0]		[5]		[5 + 10 + 25]		[40]
[0	0	1	2	5]		[5]		[5 + 10 + 25]		[40]

# sparsa transposta

[5	2	1	0	0]		[5]		[25 + 10 + 5]		[40]
[0	5	2	1	0]		[5]		[25 + 10 + 5]		[40]
[0	0	5	2	1]	x 	[5]	=	[25 + 10 + 5]	=	[40]
[0	0	0	5	2]		[5]		[25 + 10]			[35]
[0	0	0	0	5]		[5]		[25]				[25]

# sparsa transposta sem diagonal

[0	2	1	0	0]		[5]		[10 + 5]		[15]
[0	0	2	1	0]		[5]		[10 + 5]		[15]
[0	0	0	2	1]	x 	[5]	=	[10 + 5]	=	[15]
[0	0	0	0	2]		[5]		[10]			[10]
[0	0	0	0	0]		[5]		[]				[0]

# csc mult

_values = [5 2 1 5 2 1 5 2 1 5 2 5];
_rowsIdx = [0 1 2 1 2 3 2 3 4 3 4 4];
_colsPtr = [0 3 6 9 11 12];
colVector = [];
b = [5 5 5 5 5];

for (int i = 0; i < size; ++i) {
	for (int k = _colsPtr[i]; k < _colsPtr[i + 1]; ++k) {
		colVector[_rowsIdx[k]] += _values[k] * b[i];

		# transposta
=--==--=# colVector[0] += 5 * 5;
		# colVector[0] += 2 * 5; [4]
=--==--=# colVector[1] += 5 * 5;
		# colVector[0] += 1 * 5; [4]
		# colVector[1] += 2 * 5; [3]
=--==--=# colVector[2] += 5 * 5;
		# colVector[1] += 1 * 5; [3]
		# colVector[2] += 2 * 5; [2]
=--==--=# colVector[3] += 5 * 5;
		# colVector[2] += 1 * 5; [2]
		# colVector[3] += 2 * 5; [1]
=--==--=# colVector[4] += 5 * 5;

		# sparsa
		# colVector[0] += 5 * 5;
		# colVector[1] += 2 * 5;
=--==--=# colVector[3] += 2 * 5;
		# colVector[2] += 1 * 5;
=--==--=# colVector[2] += 1 * 5;
		# colVector[1] += 5 * 5;
=--==--=# colVector[2] += 2 * 5;
		# colVector[2] += 2 * 5;
=--==--=# colVector[3] += 1 * 5;
		# colVector[1] += 1 * 5;
		# colVector[2] += 5 * 5;
=--==--=# colVector[3] += 2 * 5;
		# colVector[1] += 2 * 5;
=--==--=# colVector[4] += 1 * 5;
		# colVector[0] += 1 * 5;
		# colVector[3] += 5 * 5;
=--==--=# colVector[4] += 2 * 5;
		# colVector[0] += 2 * 5;
		# colVector[4] += 5 * 5;

		# colVector[0] = 25 + 10 + 5;			[40]
		# colVector[1] = 10 + 25 + 5 + 10;		[50]
		# colVector[2] = 5 + 5 + 10 + 10 + 25;	[55]
		# colVector[3] = 10 + 5 + 10 + 25;		[50]
		# colVector[4] = 5 + 10 + 25;			[40]
	}
}
